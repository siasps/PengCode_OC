//
//  PrefixHeader.pch
//  FJBiotechnology
//
//  Created by peng on 2019/2/25.
//  Copyright © 2019 peng. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch


//上架显示的版本号
#define FXX_AppVersion @"1.0.0"

//版本号
#define CURRENT_APP_DOT_VERSION         @"1.0.0"
#define CURRENT_APP_VERSION             @"0100"
#define INT_CURRENT_APP_VERSION         @"100"
#define CURRENT_APP_TYPE                @"ios"
#define DISTRIBUTION_CHANNAL            @"app"
#define DEVICE_ID                       [[UIDevice currentDevice]uniqueDeviceIdentifier]




/**
 放在：PrefixHeader.pch文件
 */
#ifdef DEBUG //测试
#define JPUSHService_apsForProduction              @"0" //用于标识当前应用所使用的APNs证书环境
#else       //正式
#define JPUSHService_apsForProduction              @"1" //用于标识当前应用所使用的APNs证书环境

#endif



#import "PPInterfacedConst.h"
#import "HHttpManager.h"
#import "UserManager.h"
//#import "CategoryManager.h"
//#import "MJRefresh.h"
//
#import "Masonry.h"
#import "UIImageView+WebCache.h"
#import "UIButton+WebCache.h"
//
#import "SVProgressHUD.h"
#import "MBProgressHUD.h"
#import "GVUserDefaults.h"
#import "GVUserDefaults+Util.h"
//
//#import "ZZCollectionViewLayout.h"
//
#import "NSObject+SXRuntime.h"
#import "UINavigation+SXFixSpace.h"
#import "UIBarButtonItem+SXCreate.h"
//
#import "BYBaseClass.h"
#import "BYCatagory.h"


#import "KIAdditions.h"
//#import "SDKManagerHeader.h"//各种SDK管理类

//
//#import "HMCityDataManager.h"
//#import "HHRefreshHeader.h"
//#import "HHRefreshBackFooter.h"
//#import "HMNullDataView.h"
//#import "HMNotLoginView.h"
//#import "HMAuthorizeToken.h"
//
//#import "BYExerciseDataModel.h"
//#import "BYStrongPracticeDataManager.h"
//
//#import "IMLineConfig.h"
//#import "QuitLoginView.h"
//#import "BYCourseDetailController.h"


#define SCREEN_WIDTH            [[UIScreen mainScreen] bounds].size.width
#define SCREEN_HEIGHT           [[UIScreen mainScreen] bounds].size.height
#define SCREEN_SCALE            (SCREEN_WIDTH/375.0)

#define VIEWSAFEAREAINSETS(view) ({UIEdgeInsets i; if(@available(iOS 11.0, *)) {i = view.safeAreaInsets;} else {i = UIEdgeInsetsZero;} i;})
#define KeyWindow  [[[UIApplication sharedApplication] delegate] window]

#define SCREEN_STATUS_HEIGHT    ([[UIApplication sharedApplication] statusBarFrame].size.height)
#define SCREEN_TOP_HEIGHT       (44.0f + SCREEN_STATUS_HEIGHT)
#define SCREEN_BOTTOM_HEIGHT    (VIEWSAFEAREAINSETS(KeyWindow).bottom)
#define SCREEN_SAFE_HEIGHT      (SCREEN_HEIGHT - SCREEN_TOP_HEIGHT - SCREEN_BOTTOM_HEIGHT)
#define SCREEN_TABBAR_HEIGHT     (49.0f)








/**
 顶部状态栏高度
 */
#define StatusHeight  [UIApplication sharedApplication].statusBarFrame.size.height

/**
 顶部navigationbar高度
 */
#define NaviBarHeight 44

/**
 navigation整体高度(包含状态栏)
 */
#define NaviViewHeight (StatusHeight + NaviBarHeight)

/**
 tabbar整体高度
 */
#define TabbarHeight (IS_IPHONE_X ? 83 : 49)

/**
 底部控件距离屏幕底部距离
 */
#define HHBottomMargin (IS_IPHONE_X ? 34 : 0)
/**
 顶部控件距离屏幕顶部距离(x多出来的28是stausBar)
 */
#define HHTopMargin (IS_IPHONE_X ? 28.0f : 0.0f)











/**
 0%=FF（不透明）
 5%=F2
 10%=E5
 15%=D8
 20%=CC
 25%=BF
 30%=B2
 35%=A5
 40%=99
 45%=8c
 50%=7F
 55%=72
 60%=66
 65%=59
 70%=4c
 75%=3F
 80%=33
 85%=21
 90%=19
 95%=0c
 100%=00（全透明）
 
 */



// RGB颜色
#define RGB(r,g,b)      [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1.0]
// RGB颜色透明度
#define RGBA(r,g,b,a)      [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:(a)]
//默认的蓝颜色
# define Default_Color  [UIColor colorWithInt:0xff8bc2eb]
# define Default_LabelColor  [UIColor colorWithInt:0xff1b88ee]
//默认背景灰颜色
//# define Default_GrayColor [UIColor colorWithInt:0xfff3f3f3]
# define Default_GrayColor    RGB(246, 248, 250)
//cell点击背景灰颜色
# define CellSelect_GrayColor [UIColor colorWithInt:0xffedecee]
//文字灰颜色
# define Label_GrayColor [UIColor colorWithInt:0xff868686]
//文字浅灰色
# define PlaceHolder_GrayColor [UIColor colorWithInt:0xffc4c4c4]
//边框颜色
# define Border_GrayColor [UIColor colorWithInt:0xffe8e8e8]
//背景透明黑色
# define BackgroundHalfBlackColor [UIColor colorWithInt:0x99000000]
//文字红色
# define Label_RedColor [UIColor colorWithInt:0xffff2741]
//navigation颜色
# define Navi_GrayColor [UIColor orangeColor]
//RGB(249, 249, 249)
//分割线颜色
#define TableViewLineColor  [UIColor colorWithInt:0xffedecee]

#define ThemeColor     RGB_COLOR_String(@"#EF8B81")   //主题色




//老版本的主题字
#define W1                       @"#95c0e7"  //主题蓝色
#define W2                       @"#3c3f58"  //通用字体黑色
#define W3                       @"#9a9caa"  //通用字体浅黑色
#define W4                       @"#e5e5e5"  //通用字体浅浅黑色






//老版本
#define RGB_COLOR_String(string)  [UIColor colorWithHexString:string]
//字体颜色
#define TextColor_1     RGB_COLOR_String(@"222222")  //通用字体颜色：深黑色
#define TextColor_2     RGB_COLOR_String(@"666666")  //通用字体颜色：浅黑色
#define TextColor_3     RGB_COLOR_String(@"aeaeae")  //通用字体颜色：浅浅黑色
#define TextColor_red   RGB_COLOR_String(@"fe5c60")  //通用字体颜色：tabbar红色
#define TextColor_blue  RGB_COLOR_String(@"2CBBA5")  //通用字体颜色：浅蓝色
#define TextColor_green RGB_COLOR_String(@"4FC17B")

#define TableSeparatorLineColor     RGB_COLOR_String(@"E9E9E9")  //用于项目中单线条颜色（tableView分割线颜色）








#define KIImageMaxSize     ([UIDevice getTotalMemorySize]/1024.0f *1000.0f*1000.0f * 2)   //图片最大size:M



// 图片前缀
#define Prefix_image_head(string)    [UserManager setPrefixURLWithURL:string]
//图片后缀
#define Prefix_image_thumb(string)    [UserManager setPrefixAndSuffixURLWithURL:string]


//通知
#define Noti_Add(n, f)     [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(f) name:n object:nil]
#define Noti_Post(n, u)    [[NSNotificationCenter defaultCenter] postNotificationName:n object:nil userInfo:u]
#define Noti_Remove()        [[NSNotificationCenter defaultCenter] removeObserver:self]
#define NotiDefaultCenter     [NSNotificationCenter defaultCenter]


//粗字体
#define FatFont @"Helvetica-Bold"

//颜色
#define Nav_Color  [UIColor colorWithInt:0xfff9f9f9]
# define Red_Color [UIColor redColor]
# define Orange_Color [UIColor orangeColor]
# define White_Color [UIColor colorWithInt:0xffffffff]
# define Yellow_Color [UIColor yellowColor]
# define Gray_Color [UIColor grayColor]
# define LightGray_Color [UIColor lightGrayColor]
# define Green_Color [UIColor greenColor]
# define Blue_Color [UIColor blueColor]
//# define Black_Color [UIColor colorWithInt:0xff3c3f58]
# define Black_Color RGB(39, 39, 39)
# define Clear_Color [UIColor clearColor]

//弱引用
#define WeakSelf(type)  __weak typeof(type) weak##type = type; // weak
//强引用
#define StrongSelf(type)  __strong typeof(type) type = weak##type; // strong

/* get thread queue */
#define SK_BG_QUEUE_WITH_PRIORITY(priority) (dispatch_get_global_queue(priority, 0))
#define SK_BG_QUEUE SK_BG_QUEUE_WITH_PRIORITY(DISPATCH_QUEUE_PRIORITY_DEFAULT)
#define SK_MAIN_QUEUE (dispatch_get_main_queue())

/* 只执行一次 */
#define SK_RUN_ONCE_START static dispatch_once_t onceToken;dispatch_once(&onceToken, ^(void)
#define SK_RUN_ONCE_END   );

/* 主线程执行 */
#define SK_MAIN_THREAD_START dispatch_async(SK_MAIN_QUEUE,^(void)
#define SK_MAIN_THREAD_END   );

/* 子线程执行 */
#define SK_BG_THREAD_START dispatch_async(SK_BG_QUEUE,^(void)
#define SK_BG_THREAD_WITH_PRIORITY_START(priority) dispatch_async(SK_BG_QUEUE_WITH_PRIORITY(priority),^(void)
#define SK_BG_THREAD_END   );

/** 系统判断 */
#define SYSTEM_VersionValue [UIDevice currentDevice].systemVersion.floatValue

/** app版本 */
#define APP_VersionString [[[NSBundle mainBundle] infoDictionary]objectForKey:@"CFBundleVersion"]

/** 判断机型 */
#define IS_IPAD (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
#define IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
#define IS_RETINA ([[UIScreen mainScreen] scale] >= 2.0)
#define SCREEN_MAX_LENGTH (MAX(SCREEN_WIDTH, SCREEN_HEIGHT))
#define SCREEN_MIN_LENGTH (MIN(SCREEN_WIDTH, SCREEN_HEIGHT))
#define IS_IPHONE_4_OR_LESS (IS_IPHONE && SCREEN_MAX_LENGTH < 568.0)
#define IS_IPHONE_5_SE (IS_IPHONE && SCREEN_MAX_LENGTH == 568.0)
#define IS_IPHONE_Normal (IS_IPHONE && SCREEN_MAX_LENGTH == 667.0)
#define IS_IPHONE_Plus (IS_IPHONE && SCREEN_MAX_LENGTH == 736.0)
//#define IS_IPHONE_X  (IS_IPHONE && SCREEN_MAX_LENGTH == 812.0)

// 判断是否为iPhone X 系列  这样写消除了在Xcode10上的警告。
#define IS_IPHONE_X \
({BOOL isPhoneX = NO;\
if (@available(iOS 11.0, *)) {\
isPhoneX = [[UIApplication sharedApplication] delegate].window.safeAreaInsets.bottom > 0.0;\
}\
(isPhoneX);})




//scrollView不偏移(iOS11及其以下的方法均适用)
#define  adjustsScrollViewInsets_NO(scrollView,vc)\
do { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Warc-performSelector-leaks\"") \
if ([UIScrollView instancesRespondToSelector:NSSelectorFromString(@"setContentInsetAdjustmentBehavior:")]) {\
[scrollView   performSelector:NSSelectorFromString(@"setContentInsetAdjustmentBehavior:") withObject:@(2)];\
} else {\
vc.automaticallyAdjustsScrollViewInsets = NO;\
}\
_Pragma("clang diagnostic pop") \
} while (0)

//国际化

#define LocalSting(key) [[NSBundle bundleWithPath:[[NSBundle mainBundle] pathForResource:[NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:@"appLanguage"]] ofType:@"lproj"]] localizedStringForKey:(key) value:nil table:@"Localizable"]



/**
 *获取沙盒 Document
 */
#define PathDocument [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) firstObject]

//获取沙盒 Cache
#define PathCache [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) firstObject]



#define BYLoginSucceedNotification  @"BYLoginSucceedNotification"



#endif /* PrefixHeader_pch */
